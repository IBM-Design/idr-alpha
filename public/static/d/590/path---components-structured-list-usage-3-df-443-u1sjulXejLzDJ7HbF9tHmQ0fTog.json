{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `General guidance`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Structured lists`), ` group content that is similar or related, such as terms and definitions.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Content`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Row height varies based on content and can expand to fit multiple lines.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `In a single list, all rows do not have to be the same height.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Column widths can either be equally proportional or proportioned based on content.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `If a list extends past 25 items, consider using a `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/components/data-table\"\n      }\n    }, `data table`), ` to present this larger set of content.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `A maximum of one paragraph of text is recommended per row.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Nesting items is not recommended, as structured lists are used to present simple data. If you have additional content that needs to be shown, consider using a `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/components/data-table\"\n      }\n    }, `data table`), `, which supports nesting items.`)), React.createElement(ImageComponent, {\n      cols: \"12\",\n      caption: \"Structured list to present definitions.\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"47.58928571428571%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Structured list to present definitions.\",\n      title: \"\",\n      src: \"/static/b51c4097df8db91e721f32161dd0e2a9/24bd0/structured-list-usage-2.png\",\n      srcSet: \"/static/b51c4097df8db91e721f32161dd0e2a9/7cb4c/structured-list-usage-2.png 280w,\\n/static/b51c4097df8db91e721f32161dd0e2a9/7ff44/structured-list-usage-2.png 560w,\\n/static/b51c4097df8db91e721f32161dd0e2a9/24bd0/structured-list-usage-2.png 1120w,\\n/static/b51c4097df8db91e721f32161dd0e2a9/7e58d/structured-list-usage-2.png 1680w,\\n/static/b51c4097df8db91e721f32161dd0e2a9/8ef2b/structured-list-usage-2.png 2240w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Interaction`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Structured lists can be single-select if a user is choosing between a set of options.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `Guidelines:`)), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Only one item can be selected from the list.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `By default, one option should be selected.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `If you need to select multiple items, use a `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/components/data-table\"\n      }\n    }, `data table.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `When the user selects an item from the list, the selected row will appear with the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `checkmark--filled`), ` icon.`)));\n  }\n\n}"},"fields":{"slug":"/components/structured-list/usage","currentPage":"usage"},"frontmatter":{"title":"Structured list","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/structured-list/usage","currentPage":"usage"}}