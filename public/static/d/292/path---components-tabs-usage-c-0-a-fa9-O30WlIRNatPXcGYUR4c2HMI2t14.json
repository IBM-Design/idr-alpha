{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `General guidance`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Tabs`), ` are used to quickly navigate between views within the same context.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Format`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Text`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Each tab label describes its content and sets user expectations. Labels are concise and use one to two words maximum. Keep in mind that at mobile widths, the character length of a title will impact the experience. Icons are not permitted in tab labels.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Number of tabs`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `A maximum of six tabs may be displayed. This is to maintain an uncluttered UI and reduce cognitive load for users.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Order`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Tab order should be consistent across an experience. Tabs with related content should be grouped adjacent to each other.`), React.createElement(ImageComponent, {\n      cols: \"8\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"75%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"An example of tabs being used.\",\n      title: \"\",\n      src: \"/static/f6ce00120f965f17c2ea0f5c3ed5b3c8/24bd0/tab-usage-1.png\",\n      srcSet: \"/static/f6ce00120f965f17c2ea0f5c3ed5b3c8/7cb4c/tab-usage-1.png 280w,\\n/static/f6ce00120f965f17c2ea0f5c3ed5b3c8/7ff44/tab-usage-1.png 560w,\\n/static/f6ce00120f965f17c2ea0f5c3ed5b3c8/24bd0/tab-usage-1.png 1120w,\\n/static/f6ce00120f965f17c2ea0f5c3ed5b3c8/b4af2/tab-usage-1.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))));\n  }\n\n}"},"fields":{"slug":"/components/tabs/usage","currentPage":"usage"},"frontmatter":{"title":"Tabs","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/tabs/usage","currentPage":"usage"}}