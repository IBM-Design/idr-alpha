{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"h3\"\n    }, `Filtering`), ` is the mechanism by which a user adds or removes data items from a displayed data set by turning on and off certain predefined attributes.`), React.createElement(AnchorLinks, null, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#selecting-filters\"\n      }\n    }, `Selecting filters`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#triggering-filters\"\n      }\n    }, `Triggering filters`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#filter-interaction\"\n      }\n    }, `Filter interaction`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Selecting filters`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Single selection`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `A `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `single-selection filter`), ` is employed when the user can pick `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `only one attribute`), ` from a category to modify the data results. Under the hood, single selection behaves like a radio button. Ways in which a single selection filter can manifest include:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Basic dropdown`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Inline dropdown`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Search`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Radio button set (either standalone or within a menu)`)), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Single selection filter as an inline dropdown\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"49.18478260869565%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"single selection filters\",\n      title: \"\",\n      src: \"/static/ae4c48e02583d7e4e96476c6b1be77fb/24bd0/filter-1.png\",\n      srcSet: \"/static/ae4c48e02583d7e4e96476c6b1be77fb/7cb4c/filter-1.png 280w,\\n/static/ae4c48e02583d7e4e96476c6b1be77fb/7ff44/filter-1.png 560w,\\n/static/ae4c48e02583d7e4e96476c6b1be77fb/24bd0/filter-1.png 1120w,\\n/static/ae4c48e02583d7e4e96476c6b1be77fb/b4af2/filter-1.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Multi-selection`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `A `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `multi-selection filter`), ` is employed when the user has the option to pick `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `more than one attribute`), ` from a category to modify the data results. Under the hood, multi-selections behave like `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `checkboxes`), `. Ways in which a single selection filter can manifest include:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Multi-select dropdown`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Inline multi-select dropdown`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Search with tags`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Checkbox set (either standalone or within a menu)`)), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Multi-selection filter set in a menu\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"49.18478260869565%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"multi-selection filters\",\n      title: \"\",\n      src: \"/static/b02bd2ecd58c44ce11dadeedd0112835/24bd0/filter-2.png\",\n      srcSet: \"/static/b02bd2ecd58c44ce11dadeedd0112835/7cb4c/filter-2.png 280w,\\n/static/b02bd2ecd58c44ce11dadeedd0112835/7ff44/filter-2.png 560w,\\n/static/b02bd2ecd58c44ce11dadeedd0112835/24bd0/filter-2.png 1120w,\\n/static/b02bd2ecd58c44ce11dadeedd0112835/b4af2/filter-2.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Multiple categories`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `A `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `category`), ` is a set of filter items within the same topic. For example, “size” is the category and `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `small`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `medium`), `, `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `large`), `, and `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `extra large`), ` are the filter choices. Multiple filter categories may be applied to the same data set. For example, the user can filter by size as well as color and price range.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Multiple category selection is most commonly manifested in either a vertical list on the left side of the page or within a horizontal drawer at the top of the data set. Multiple categories should never be put within a menu or dropdown.`), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Multiple filter categories in a left panel\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"76.22282608695652%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Multiple filter categories examples\",\n      title: \"\",\n      src: \"/static/aeb30ee6a2088dc356072b4aabf47f37/24bd0/filter-3.png\",\n      srcSet: \"/static/aeb30ee6a2088dc356072b4aabf47f37/7cb4c/filter-3.png 280w,\\n/static/aeb30ee6a2088dc356072b4aabf47f37/7ff44/filter-3.png 560w,\\n/static/aeb30ee6a2088dc356072b4aabf47f37/24bd0/filter-3.png 1120w,\\n/static/aeb30ee6a2088dc356072b4aabf47f37/b4af2/filter-3.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Triggering filters`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Batch filter`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `A `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `batch filter`), ` is employed when all filters are applied together at the end of the selection process. The data set only refreshes once. The trigger is most commonly an “Apply filter” button.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The batch filter works best when the user is making several filtering selections across different categories that may take a longer time to mentally process. Batch filtering is also a good solution for slow data-return speeds. This can prevent the user from having to wait for the data to load after every selection.`), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Batch filter example in a drawer\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"55.57065217391304%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Batch filter example\",\n      title: \"\",\n      src: \"/static/626cfe08ee74806c6fcbe31561d7017c/24bd0/filter-4.png\",\n      srcSet: \"/static/626cfe08ee74806c6fcbe31561d7017c/7cb4c/filter-4.png 280w,\\n/static/626cfe08ee74806c6fcbe31561d7017c/7ff44/filter-4.png 560w,\\n/static/626cfe08ee74806c6fcbe31561d7017c/24bd0/filter-4.png 1120w,\\n/static/626cfe08ee74806c6fcbe31561d7017c/b4af2/filter-4.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Interactive filter`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `An `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `interactive filter`), ` returns results after each individual selection is made. The trigger is the individual selection and the filter manipulates the data in real time. This is a good solution for when the user is only selecting from one category or the user is expected to only make one filter selection.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Filter interaction`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Each filter interaction should contain the following patterns and states:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Default start state`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Unselected and selected state`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Filter applied state`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Clear filter(s) action`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Starting states`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Filters within each category should start either as `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `all unselected`), ` or `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `all selected`), `. When using multiple categories, the start state can vary from category to category. If the user wants only one or a few criteria to be excluded from the results, then all filters should be selected at the start. Vice-versa, if the user wants to see only results related to one particular criteria, then all filters should start as unselected.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Filter applied`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `If the filter(s) can be hidden in either a drawer, dropdown, or menu, then there should be an indicator visible on the closed filter state that informs the user that filters have been applied. At a minimum, the indicator should include the number of filters applied and have the option to clear filters without re-opening the filter container.`), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Filters not applied\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"59.91847826086957%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Hidden filters not applied\",\n      title: \"\",\n      src: \"/static/cc9e37db91f2eeb07520d441f0bee16d/24bd0/filter-5.png\",\n      srcSet: \"/static/cc9e37db91f2eeb07520d441f0bee16d/7cb4c/filter-5.png 280w,\\n/static/cc9e37db91f2eeb07520d441f0bee16d/7ff44/filter-5.png 560w,\\n/static/cc9e37db91f2eeb07520d441f0bee16d/24bd0/filter-5.png 1120w,\\n/static/cc9e37db91f2eeb07520d441f0bee16d/b4af2/filter-5.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Filters applied\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"59.91847826086957%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Hidden filters applied\",\n      title: \"\",\n      src: \"/static/408f7f7427d3688ce4a00c50da5f73ca/24bd0/filter-6.png\",\n      srcSet: \"/static/408f7f7427d3688ce4a00c50da5f73ca/7cb4c/filter-6.png 280w,\\n/static/408f7f7427d3688ce4a00c50da5f73ca/7ff44/filter-6.png 560w,\\n/static/408f7f7427d3688ce4a00c50da5f73ca/24bd0/filter-6.png 1120w,\\n/static/408f7f7427d3688ce4a00c50da5f73ca/b4af2/filter-6.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Resetting filters`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Each category should have a way to clear all applied filters at once without having to interact with each individual item. Clearing filters returns the filters to their original default starting state.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `If multiple categories have been applied to the same data set then there should be a way to dismiss all filters across all categories at once.`), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Filter reset example for all categories and a single category\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"31.38586956521739%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Filter reset example\",\n      title: \"\",\n      src: \"/static/b75426a8be0d165c445392b646eb0002/24bd0/filter-7.png\",\n      srcSet: \"/static/b75426a8be0d165c445392b646eb0002/7cb4c/filter-7.png 280w,\\n/static/b75426a8be0d165c445392b646eb0002/7ff44/filter-7.png 560w,\\n/static/b75426a8be0d165c445392b646eb0002/24bd0/filter-7.png 1120w,\\n/static/b75426a8be0d165c445392b646eb0002/b4af2/filter-7.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))));\n  }\n\n}"},"fields":{"slug":"/patterns/filtering/filtering","currentPage":"filtering"},"frontmatter":{"title":"Filtering","label":null,"tabs":null,"internal":null}}},"pageContext":{"slug":"/patterns/filtering/filtering","currentPage":"filtering"}}