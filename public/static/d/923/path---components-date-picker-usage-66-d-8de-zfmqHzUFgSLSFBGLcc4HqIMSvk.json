{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(AnchorLinks, null, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#general-guidance\"\n      }\n    }, `General guidance`), ` `), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#variations\"\n      }\n    }, `Variations`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#content\"\n      }\n    }, `Content`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#interaction\"\n      }\n    }, `Interaction`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#time-picker\"\n      }\n    }, `Time picker`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `General guidance`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Date and time pickers`), ` allow users to select a single or a range of dates and times.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Variations`), React.createElement(MDXTag, {\n      name: \"table\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"thead\",\n      components: components,\n      parentName: \"table\"\n    }, React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"thead\"\n    }, React.createElement(MDXTag, {\n      name: \"th\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Type`), React.createElement(MDXTag, {\n      name: \"th\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Purpose`))), React.createElement(MDXTag, {\n      name: \"tbody\",\n      components: components,\n      parentName: \"table\"\n    }, React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Range date picker`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `To select a range of dates, accompanied by a calendar widget.`)), React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Single date picker`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `When a user needs to select one date, accompanied by a calendar widget.`)), React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Simple date picker`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `When the date is known by the user and they don’t need a calendar to anticipate the dates.`)))), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Types of date pickers\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"183.42391304347825%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"range, single, and simple date pickers\",\n      title: \"\",\n      src: \"/static/a113bde3a8c41d1900a57317de96cafd/24bd0/date-picker-usage-1.png\",\n      srcSet: \"/static/a113bde3a8c41d1900a57317de96cafd/7cb4c/date-picker-usage-1.png 280w,\\n/static/a113bde3a8c41d1900a57317de96cafd/7ff44/date-picker-usage-1.png 560w,\\n/static/a113bde3a8c41d1900a57317de96cafd/24bd0/date-picker-usage-1.png 1120w,\\n/static/a113bde3a8c41d1900a57317de96cafd/b4af2/date-picker-usage-1.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Content`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Labels`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Both date and time pickers are accompanied by labels, and follow the same accessibility guidelines for all `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/components/form\"\n      }\n    }, `forms`), `.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Format`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `For date pickers, use placeholder text so users input the date in the correct format. It can be formatted in a variety of ways. See the date picker code `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://github.com/ibm/carbon-components/tree/master/src/components/date-picker\"\n      }\n    }, `documentation`), ` for more info.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Interaction`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Calendar widget`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `It is recommended to use the date picker with a calendar widget when the user is browsing between a range of dates. Aid the user in making the proper choices by providing a visual reference of dates to choose from. The calendar widget appears once the user has interacted with the date input field (typically on `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `:focus`), `).`), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Selecting dates from the range date picker\"\n    }, React.createElement(MDXTag, {\n      name: \"img\",\n      components: components,\n      props: {\n        \"src\": \"/date-picker-usage-animation-1-a0c6cd407391b2a80723d32f93dcae8e.gif\",\n        \"alt\": \"example of date picker\"\n      }\n    })), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Simple date picker`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The simple date picker provides the user with a text input in which they can input month/day/year. Simple date pickers are typically used when the date is known by the user, such as a birthday or credit card expiration.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Time picker`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Time pickers provide the user with a text input in which they can input hours/minutes. Additionally, they can be accompanied by an “AM/PM” selection and a time zone selection, which is styled as an `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/components/select\"\n      }\n    }, `inline select`), `.`));\n  }\n\n}"},"fields":{"slug":"/components/date-picker/usage","currentPage":"usage"},"frontmatter":{"title":"Date picker","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/date-picker/usage","currentPage":"usage"}}