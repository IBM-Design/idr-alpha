{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Carbon empowers designers to rapidly build beautiful and accessible experiences. This kit contains all resources you need to get started.`), React.createElement(AnchorLinks, null, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#get-the-kit\"\n      }\n    }, `Get the kit`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#start-designing\"\n      }\n    }, `Start designing`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#anatomy\"\n      }\n    }, `Anatomy`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#info\"\n      }\n    }, `Info`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Resources`), React.createElement(GridWrapper, {\n      col_lg: \"8\",\n      flex: \"true\",\n      bleed: \"true\"\n    }, React.createElement(ClickableTile, {\n      title: \"Subscribe to the Carbon library\",\n      href: \"sketch://add-library/cloud/JaVzz\",\n      type: \"resource\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"200px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"95%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"sketch icon\",\n      title: \"\",\n      src: \"/static/25ef536ecb3b4de186e21f7a970c20ee/fdc01/sketch-icon.png\",\n      srcSet: \"/static/25ef536ecb3b4de186e21f7a970c20ee/fdc01/sketch-icon.png 200w\",\n      sizes: \"(max-width: 200px) 100vw, 200px\"\n    }))), React.createElement(ClickableTile, {\n      title: \"Subscribe to the IBM Design Language library\",\n      href: \"sketch://add-library/cloud/75VZZ\",\n      type: \"resource\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"200px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"95%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"sketch icon\",\n      title: \"\",\n      src: \"/static/25ef536ecb3b4de186e21f7a970c20ee/fdc01/sketch-icon.png\",\n      srcSet: \"/static/25ef536ecb3b4de186e21f7a970c20ee/fdc01/sketch-icon.png 200w\",\n      sizes: \"(max-width: 200px) 100vw, 200px\"\n    }))), React.createElement(ClickableTile, {\n      title: \"Download the IBM 2x Grid template\",\n      href: \"https://sketch.cloud/s/ngV7z\",\n      type: \"resource\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"200px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"95%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"sketch icon\",\n      title: \"\",\n      src: \"/static/25ef536ecb3b4de186e21f7a970c20ee/fdc01/sketch-icon.png\",\n      srcSet: \"/static/25ef536ecb3b4de186e21f7a970c20ee/fdc01/sketch-icon.png 200w\",\n      sizes: \"(max-width: 200px) 100vw, 200px\"\n    })))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Get the kit`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"li\"\n    }, `Install Sketch`), `. To design with Carbon you must have the most recent version of `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.sketchapp.com/\"\n      }\n    }, `Sketch`), ` installed.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"li\"\n    }, `Add libraries`), `. Designing with Carbon requires subscribing to two libraries: The IBM Design Language kit and the Carbon kit. Click the tiles above to subscribe to each. Both libraries are required.`, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components,\n      parentName: \"li\"\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `The `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"sketch://add-library/cloud/JaVzz\"\n      }\n    }, `Carbon`), ` library contains all Carbon component symbols, color swatches, text styles, and layer styles.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `The `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"sketch://add-library/cloud/75VZZ\"\n      }\n    }, `IBM Design Language`), ` offers fonts, colors, icons, and other resources shared across all embodiments of the IBM Design Language.`))), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"li\"\n    }, `Download the grid template`), `. Click the Grid tile at the top of this page. Once on the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://sketch.cloud/s/ngV7z\"\n      }\n    }, `Sketch library`), ` page, choose `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `Download Document`), ` from the right-side panel. Open the file in Sketch. Navigate to `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `File → Save as Template`), `. You can now access the saved grid template at `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `File → New file from Template`), `.`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Start designing`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `To get started with Carbon, familiarize yourself with the contents of each library.`), React.createElement(MDXTag, {\n      name: \"ol\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"li\"\n    }, `Start with the grid`), `. At the top of your screen, navigate to `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `File → New file from Template`), ` and select your grid template. You’ll always be able to find the template here.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"li\"\n    }, `Icons and color swatches`), `. Symbols from both the IBM Design Language library and the Carbon library are accessible from any Sketch document. Navigage to `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `Insert → Symbols → Carbon Design System`), ` or `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `IBM Design Language`), `.`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ol\"\n    }, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"li\"\n    }, `You’re all set`), `. Refer to the content below for a more detailed breakdown of the kit, or head to Sketch to begin designing.`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Anatomy`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `See the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://sketch.cloud/s/JaVzz/\"\n      }\n    }, `Sketch library`), ` page for an overview of the kit.`), React.createElement(AnchorLinks, {\n      small: true\n    }, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#grid\"\n      }\n    }, `Grid`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#symbols\"\n      }\n    }, `Symbols`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#text-styles\"\n      }\n    }, `Text styles`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#layer-styles\"\n      }\n    }, `Layer styles`)))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Grid`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `IBM 2x Grid`), ` is the framework for laying out all visual elements in Carbon.`), React.createElement(ImageComponent, {\n      cols: \"12\",\n      caption: \"2x Grid overview\"\n    }, React.createElement(MDXTag, {\n      name: \"img\",\n      components: components,\n      props: {\n        \"src\": \"/grid-2-78f2bcb634d36680d173463377316538.gif\",\n        \"alt\": \"2x Grid overview\"\n      }\n    })), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `All designs should start with the 2x Grid template. Once you have `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"#get-the-kit\"\n      }\n    }, `saved the grid`), ` as a template, navigate to `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `File → New file from Template`), ` and select the grid template.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `See our `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/guidelines/layout\"\n      }\n    }, `layout guidelines`), ` for a more detailed walkthrough of the 2x Grid.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Structure`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The grid template includes templates for all breakpoints along with the necessary formulas to design for custom screen sizes.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `To toggle the grid on and off, use `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Control+G`), `. To toggle the layout guide, use `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Control+L`), `.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Symbols`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/components/overview\"\n      }\n    }, `components`), `, `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/contributing/add-ons\"\n      }\n    }, `add-ons`), `, and `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/guidelines/iconography/library\"\n      }\n    }, `icons`), ` live in the design kit as Sketch `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `symbols`), `.`), React.createElement(ImageComponent, {\n      cols: \"12\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"63.235294117647065%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Carbon symbol menu navigation\",\n      title: \"\",\n      src: \"/static/b98d0a92e666faa6431f168c9befc147/24bd0/carbon-kit.png\",\n      srcSet: \"/static/b98d0a92e666faa6431f168c9befc147/7cb4c/carbon-kit.png 280w,\\n/static/b98d0a92e666faa6431f168c9befc147/7ff44/carbon-kit.png 560w,\\n/static/b98d0a92e666faa6431f168c9befc147/24bd0/carbon-kit.png 1120w,\\n/static/b98d0a92e666faa6431f168c9befc147/7e58d/carbon-kit.png 1680w,\\n/static/b98d0a92e666faa6431f168c9befc147/8ef2b/carbon-kit.png 2240w,\\n/static/b98d0a92e666faa6431f168c9befc147/cb9d9/carbon-kit.png 2720w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Library menu navigation`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `There are two kinds of symbols — `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `library symbols`), ` and `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `document symbols`), `. Library symbols are available in any Sketch document, while document symbols are specific to the document in which they are found.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `From the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Insert`), ` menu, select `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Symbols → Carbon Design System`), ` to add symbols onto your page.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon symbols are built to be flexible, and designers should not detach symbols from the library. Once a symbol is detached, you will no longer receive updates as they are released.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Structure`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Symbols are organized by component; after selecting a component, you’ll see the variations and states of that component.`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `To add the whole component, select the desired variant and place it on your artboard.`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"li\"\n    }, `For even more configurablility, use the individual building blocks found under the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Items`), ` folder within the symbol. Be sure your custom design adheres to our `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/guidelines/accessibility/overview\"\n      }\n    }, `design guidelines`), `.`))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Text styles`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Text styles`), ` are based on the typography rules that are defined by the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/guidelines/typography/overview\"\n      }\n    }, `IBM Design Language`), `.`), React.createElement(ImageComponent, {\n      cols: \"12\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"63.235294117647065%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Text styles navigation\",\n      title: \"\",\n      src: \"/static/bf9a5497394c033f5a6928a894984f94/24bd0/text-styles-1.png\",\n      srcSet: \"/static/bf9a5497394c033f5a6928a894984f94/7cb4c/text-styles-1.png 280w,\\n/static/bf9a5497394c033f5a6928a894984f94/7ff44/text-styles-1.png 560w,\\n/static/bf9a5497394c033f5a6928a894984f94/24bd0/text-styles-1.png 1120w,\\n/static/bf9a5497394c033f5a6928a894984f94/7e58d/text-styles-1.png 1680w,\\n/static/bf9a5497394c033f5a6928a894984f94/8ef2b/text-styles-1.png 2240w,\\n/static/bf9a5497394c033f5a6928a894984f94/cb9d9/text-styles-1.png 2720w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Library menu navigation`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `From the main menu select `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `Insert → Text Styles → Carbon Design System`), ` to insert a Carbon type token text style.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Text styles within components are carefully considered. We do not recommend detaching the symbol to change default styles.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Structure`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon text styles in Sketch are organized similarly to symbols.`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `The first text style level displays `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/guidelines/themes\"\n      }\n    }, `theme options`), ` (i.e., white theme).`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `The second level shows the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/guidelines/typography\"\n      }\n    }, `Carbon type`), ` tokens (i.e., body-long-01).`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `The third level selects the type color, which is labeled with a `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/guidelines/color\"\n      }\n    }, `Carbon color`), ` token name.`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Layer styles`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Layer styles`), ` are color selections for any shape in Sketch.`), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"Use predetermined overrides when possible\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"78.125%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Layer styles navigation example\",\n      title: \"\",\n      src: \"/static/74d5743e0a4297f20d830a0348f622d1/24bd0/layer-style-1.png\",\n      srcSet: \"/static/74d5743e0a4297f20d830a0348f622d1/7cb4c/layer-style-1.png 280w,\\n/static/74d5743e0a4297f20d830a0348f622d1/7ff44/layer-style-1.png 560w,\\n/static/74d5743e0a4297f20d830a0348f622d1/24bd0/layer-style-1.png 1120w,\\n/static/74d5743e0a4297f20d830a0348f622d1/b4af2/layer-style-1.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Library menu navigation`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/guidelines/color/overview\"\n      }\n    }, `Color`), ` in Carbon is carefully considered, and we discourage custom layer styles.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The first layer is the theme selection (i.e., 01 White theme). The second layer is core Carbon color tokens (i.e., field-01) for the selected them. The interaction state tokens are nested in a third layer under “state”.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Info`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `If you’re brand new to Sketch, they offer some great `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.sketchapp.com/docs/\"\n      }\n    }, `tutorials and help docs`), `.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Updates`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `We make small adjustments and bug fixes to the kit on a regular basis. When we make a change to any of the libraries, you will be notified via a red pop-up in the top right corner of the Sketch window.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The updates are opt-in, however we recommend you keep your kit as up to date as possible. Once a change is accepted, you will not be able to revert to the previous version.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Migration`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `If you’re using an older version of Carbon, check out the v10 `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"updates/v10-migration/designers\"\n      }\n    }, `migration docs`), ` when you’re ready to make the switch.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Support`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Can’t find an answer to your question? Open up an issue on `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://github.com/IBM/carbon-components/issues/new/choose\"\n      }\n    }, `GitHub`), `. If you’re an IBMer, feel free to reach out on Slack at #carbon-design-system.`));\n  }\n\n}"},"fields":{"slug":"/getting-started/designers/designers","currentPage":"designers"},"frontmatter":{"title":"Designers","label":null,"tabs":null,"internal":null}}},"pageContext":{"slug":"/getting-started/designers/designers","currentPage":"designers"}}