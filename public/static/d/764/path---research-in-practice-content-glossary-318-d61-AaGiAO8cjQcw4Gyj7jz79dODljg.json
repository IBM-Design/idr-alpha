{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Consistency in language`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This section covers the approved `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `action labels`), ` and `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `idioms`), ` for use in IBM products and documentation. Users rely on consistent labels for common actions to predict how to interact with an interface. Idioms are expressions that have a meaning different from what might be expected when taken literally.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This section is a living document. When new terms are introduced, they will be added here.`), React.createElement(Glossary, null));\n  }\n\n}"},"fields":{"slug":"/research-in-practice/content/glossary","currentPage":"glossary"},"frontmatter":{"title":"Content","label":"Content design can make or break an online experience. Always strive for writing that is clear, concise, and on-brand.","tabs":["General","Guidance","Glossary"],"internal":null}}},"pageContext":{"slug":"/research-in-practice/content/glossary","currentPage":"glossary"}}