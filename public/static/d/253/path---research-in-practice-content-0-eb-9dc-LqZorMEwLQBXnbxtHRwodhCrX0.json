{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Content design can make or break an online experience. Always strive for writing that is clear, concise, and on-brand.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Voice and tone`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Consistent voice and tone are crucial for connecting and resonating with users. What’s the difference between voice and tone? One way to think about it is that voice is always consistent, but tone often changes depending on context.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Voice`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Voice is the foundation for communicating about IBM products and delivering brand messages. At IBM, our voice expresses the core of our personality, while bringing comfort, ease, and a sense of connection to our users. Through careful use of the IBM voice, we help empower users to meet their business goals. `), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Tone`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Tone conveys an attitude toward both the subject matter and the reader. All content – whether it’s introductory text on the UI, an error message, or a topic in the docs – tells part of a bigger story. Good storytellers are skilled in two main areas: what they are saying (the substantive content) and how to say it to any given audience (the style and tone in which it is presented). Be a good storyteller.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Conversational levels`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Content should never feel complex, distant, or disjointed. Rather, it should feel like a conversation with a smart friend – personal, relatable, helpful, and engaging. Do not mistake conversational style for sloppy writing! Conversational content still needs to be clear, concise, and easy to understand. The best content creates a connection with the user.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Here’s a quick guide to conversational levels based on the six stages of the user journey:`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Less conversational:`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Instructional content for how to complete a task (e.g. steps)`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `“Go to Avatar icon > Account > Notifications to set up general account and spending notifications. Spending notifications are available only for Subscription and Pay-As-You-Go account owners.”`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `More conversational:`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Welcome pages and standard interface content for productive use, managing and upgrading, `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"h4\"\n    }, `leverage and extend`), ` content, and support`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `“To start using IBM Cloud, name your first organization. Think of an org as a project or team that shares resources, such as apps, databases, and other services. Orgs exist in geographic regions, so decide where you’d like to put your first one.”`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Most conversational:`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"h4\"\n    }, `Discover, try, buy`), ` content`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `“Watson Assistant comes pre-trained with industry-relevant content. It can make sense of your historical chat or call logs, and it has a visual dialog editor — meaning it’s never been easier to get started (developers not required).”`));\n  }\n\n}"},"fields":{"slug":"/research-in-practice/content/general","currentPage":"general"},"frontmatter":{"title":"Content","label":"Content design can make or break an online experience. Always strive for writing that is clear, concise, and on-brand.","tabs":["General","Guidance","Glossary"],"internal":null}}},"pageContext":{"slug":"/research-in-practice/content/general","currentPage":"/research-in-practice/content/general"}}