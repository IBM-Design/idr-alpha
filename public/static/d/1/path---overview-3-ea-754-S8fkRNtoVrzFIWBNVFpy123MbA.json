{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(AnchorLinks, null, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#introduction\"\n      }\n    }, `Introduction`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#guiding-principles\"\n      }\n    }, `Guiding principles`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#who-is-carbon-for\"\n      }\n    }, `Who is Carbon for?`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Introduction`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon is IBM’s open-source design system for digital products and experiences. With the IBM Design Language as its foundation, the system consists of working code, design tools and resources, human interface guidelines, and a vibrant community of contributors.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `As IBM’s official design system, Carbon serves a wide range of designers and developers building digital products and experiences. The goals of the system include improving UI consistency and quality, making the design and development process more efficient and focused, establishing a shared vocabulary between designer and developer, and providing clear, discoverable guidance around design and development best practices.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon is maintained by a core team of designers, developers, and writers based in the Austin, Texas IBM Design Studio.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Guiding principles`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Carbon is open`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `It’s a distributed effort, guided by the principles of the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://en.wikipedia.org/wiki/Open-source-software_movement\"\n      }\n    }, `open-source movement`), `. Carbon’s users are also its makers, and everyone is encouraged to contribute.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Carbon is inclusive`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `It’s designed and built to be accessible to all, regardless of ability or situation.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Carbon is modular and flexible`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon’s modularity ensures maximum flexibility in execution. Its components are designed to work seamlessly with each other, in whichever combination suits the needs of the user.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Carbon puts the user first`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Starting with rigorous research into users’ needs and desires, and revised continuously based on their feedback, Carbon is laser-focused on real people.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Carbon builds consistency`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Based on the comprehensive IBM Design Language, every element and component of Carbon was designed from the ground up to work elegantly together to ensure consistent, cohesive user experiences.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Who is Carbon for?`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Designers`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon is the official implementation of the IBM Design Language for product and web designers, and represents an ever-growing ecosystem of design assets and guidance. With a comprehensive set of human interface guidelines, design kits, and documentation, Carbon helps designers work faster and smarter.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Developers`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon is built by developers, for developers. Our front-end libraries are continuously maintained and fully supported by the core Carbon team (and an army of open-source contributors).`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `There are four different implementations of the Carbon Design System. One is a vanilla JavaScript library; that’s written in ES6+, SCSS, and HTML and ships deliverables in vanilla JavaScript in ES5 as well as ES6, CSS, SCSS and HTML. Another is a React library that ships a React rewrite of the JavaScript, but uses the same CSS as the core library. There are also Angular and Vue libraries that uses the same CSS.`));\n  }\n\n}"},"fields":{"slug":"/overview/overview","currentPage":"overview"},"frontmatter":{"title":"About","label":null,"tabs":null,"internal":false}}},"pageContext":{"slug":"/overview/overview","currentPage":"overview"}}