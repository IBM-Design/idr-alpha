{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(AnchorLinks, null, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#introduction\"\n      }\n    }, `Introduction`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#color-contrast\"\n      }\n    }, `Color contrast`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#low-vision\"\n      }\n    }, `Low vision`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#tools\"\n      }\n    }, `Tools`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Resources`), React.createElement(GridWrapper, {\n      col_lg: \"8\",\n      flex: \"true\",\n      bleed: \"true\"\n    }, React.createElement(ClickableTile, {\n      title: \"Carbon color contrast tool\",\n      href: \"https://marijohannessen.github.io/color-contrast-checker/\",\n      type: \"resource\"\n    })), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Introduction`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Visual impairments can include low vision, color blindness, and complete blindness. Carbon components have been designed to accommodate the entire spectrum of visual impairment, though designers still need to exercise diligence to ensure that the components are used correctly.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Color contrast`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Carbon meets `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\"\n      }\n    }, `WCAG AA standards`), ` across all standard themes in the system, including color contrast ratios.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Standard text`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Standard text and images of text must have a contrast ratio of at least `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `4.5:1`), `.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Large text`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Large text (at least 24 px regular and light / 19 px semi-bold) must have a contrast ratio of `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `3:1.`)), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Text against non-static backgrounds`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `When text is rendered on a gradient background or image, make sure the text color meets contrast standards in all places it appears. This is especially important for parallax applications or animations where text and backgrounds are moving independently of each other.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `UI components`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Visual information used to indicate states and boundaries of UI components must have a contrast ratio of `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `3:1`), ` against adjacent colors. A UI component is defined as “a part of the content that is perceived by users as a single control for a distinct function.” This includes form elements.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://www.ibm.com/able/guidelines/ci162/contrast.html\"\n      }\n    }, `IBM Checkpoint 1.4.3 Contrast (Minimum)`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Please refer to our `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/guidelines/color/usage\"\n      }\n    }, `usage section on the Colors page`), ` to learn more about color contrast ratios. You can also use this `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://marijohannessen.github.io/color-contrast-checker/\"\n      }\n    }, `color contrast`), ` tool to ensure your ratios pass WCAG AA standards.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Color blindness`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Color blindness involves difficulty in perceiving or distinguishing between colors, as well as sensitivity to color brightness. It affects approximately one in twelve men and one in two hundred women worldwide.`), React.createElement(MDXTag, {\n      name: \"table\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"thead\",\n      components: components,\n      parentName: \"table\"\n    }, React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"thead\"\n    }, React.createElement(MDXTag, {\n      name: \"th\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Type`), React.createElement(MDXTag, {\n      name: \"th\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Color deficiency`))), React.createElement(MDXTag, {\n      name: \"tbody\",\n      components: components,\n      parentName: \"table\"\n    }, React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Protanopia`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Red/green`)), React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Tritanopia`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Blue`)), React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Deuteranopia`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Green`)), React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Monochromacy`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `All colors`)))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Designing for color blindness`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Don’t rely on color alone to convey meaning. This includes conveying information, indicating an action, prompting the user for a response, or distinguishing one visual element from another. When designing with color, it might help to use a color-blind simulator to review visibility of content. If you’re working in Sketch, we recommend the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://www.getstark.co/\"\n      }\n    }, `Stark`), ` plugin.`), React.createElement(ImageComponent, {\n      cols: \"12\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"50%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"rainbow palette\",\n      title: \"\",\n      src: \"/static/5262dffea372f7e4a577ff3ec2a4539e/24bd0/color-accessibility-1.png\",\n      srcSet: \"/static/5262dffea372f7e4a577ff3ec2a4539e/7cb4c/color-accessibility-1.png 280w,\\n/static/5262dffea372f7e4a577ff3ec2a4539e/7ff44/color-accessibility-1.png 560w,\\n/static/5262dffea372f7e4a577ff3ec2a4539e/24bd0/color-accessibility-1.png 1120w,\\n/static/5262dffea372f7e4a577ff3ec2a4539e/7e58d/color-accessibility-1.png 1680w,\\n/static/5262dffea372f7e4a577ff3ec2a4539e/8ef2b/color-accessibility-1.png 2240w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Low vision`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Low vision can include partial sight in one or both eyes and can range from mild to severe. It affects about 4% of the world’s population.`), React.createElement(MDXTag, {\n      name: \"table\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"thead\",\n      components: components,\n      parentName: \"table\"\n    }, React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"thead\"\n    }, React.createElement(MDXTag, {\n      name: \"th\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Type`), React.createElement(MDXTag, {\n      name: \"th\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Visual deficiency`))), React.createElement(MDXTag, {\n      name: \"tbody\",\n      components: components,\n      parentName: \"table\"\n    }, React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Low acuity`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Also known as “blurred vision.” Can make text difficult to read, since it appears fuzzy.`)), React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Low-contrast sensitivity`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Decreased ability to determine fine detail and distinguish one object from another`)), React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Obstructed visual field`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `The user’s view is partially obstructed. Can include central vision and spotty vision.`)), React.createElement(MDXTag, {\n      name: \"tr\",\n      components: components,\n      parentName: \"tbody\"\n    }, React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"td\"\n    }, `Retinitis Pigmentosa`)), React.createElement(MDXTag, {\n      name: \"td\",\n      components: components,\n      parentName: \"tr\",\n      props: {\n        \"align\": null\n      }\n    }, `Also known as “tunnel vision.” The user is only able to see central elements.`)))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Low-vision disabilities`), React.createElement(ImageComponent, {\n      cols: \"12\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"53.214285714285715%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"blurred vision and tunnel vision example on Google website\",\n      title: \"\",\n      src: \"/static/cac4d2304193cd2215ca6b53d9579852/24bd0/color-accessibility-2.png\",\n      srcSet: \"/static/cac4d2304193cd2215ca6b53d9579852/7cb4c/color-accessibility-2.png 280w,\\n/static/cac4d2304193cd2215ca6b53d9579852/7ff44/color-accessibility-2.png 560w,\\n/static/cac4d2304193cd2215ca6b53d9579852/24bd0/color-accessibility-2.png 1120w,\\n/static/cac4d2304193cd2215ca6b53d9579852/7e58d/color-accessibility-2.png 1680w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Designing for low vision`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `To get an understanding of the various low-vision disabilities, we recommend using the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl\"\n      }\n    }, `NoCoffee`), ` Chrome plugin to preview websites. Low-vision users may be using a screen reader to preview your website or experience, so be sure to follow `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/guidelines/accessibility/keyboard\"\n      }\n    }, `keyboard guidelines`), ` to ensure the page is read to the user in a logical order.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Resources`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://w3.ibm.com/able/devtest/quick/\"\n      }\n    }, `IBM Accessibility quick guidance`), `(Internal only)`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.ibm.com/able/guidelines/ci162/accessibility_checklist.html\"\n      }\n    }, `IBM Web Accessibility Checklist`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.w3.org/TR/WCAG21/\"\n      }\n    }, `WCAG 2.1 guidelines`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://www.w3.org/TR/low-vision-needs/\"\n      }\n    }, `W3C low vision requirements`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Tools`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://chrome.google.com/webstore/detail/high-contrast/djcfdncoelnlbldjfhinnjlhdjlikmph/related?hl=en\"\n      }\n    }, `High Contrast Chrome plugin`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"http://www.getstark.co/\"\n      }\n    }, `Stark Sketch plugin`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl\"\n      }\n    }, `NoCoffee vision simulator`))));\n  }\n\n}"},"fields":{"slug":"/research-in-practice/overview/color","currentPage":"color"},"frontmatter":{"title":"Accessibility","label":"IBM firmly believes that web and software experiences should be accessible for everyone, regardless of abilities or impairments.","tabs":["Overview","Color","Keyboard","Developers"],"internal":null}}},"pageContext":{"slug":"/research-in-practice/overview/color","currentPage":"color"}}