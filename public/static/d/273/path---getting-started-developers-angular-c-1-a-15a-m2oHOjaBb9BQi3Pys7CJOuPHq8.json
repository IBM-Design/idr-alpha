{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(AnchorLinks, null, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#carbon-angular-library\"\n      }\n    }, `Carbon Angular library`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#install\"\n      }\n    }, `Install`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#development\"\n      }\n    }, `Development`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Resources`), React.createElement(GridWrapper, {\n      col_lg: \"8\",\n      flex: \"true\",\n      bleed: \"true\"\n    }, React.createElement(ClickableTile, {\n      title: \"Try Angular components with CodeSandbox.\",\n      href: \"https://codesandbox.io/s/0129r494ql\",\n      type: \"resource\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"200px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"95%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"codesandbox\",\n      title: \"\",\n      src: \"/static/982215411e3a94425e6a2d19aa0bbd79/fdc01/codesandbox.png\",\n      srcSet: \"/static/982215411e3a94425e6a2d19aa0bbd79/fdc01/codesandbox.png 200w\",\n      sizes: \"(max-width: 200px) 100vw, 200px\"\n    })))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Carbon Angular library`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"http://angular.carbondesignsystem.com/\"\n      }\n    }, `library`), ` provides front-end developers & engineers a collection of reusable Angular components to build websites and user interfaces. Adopting the library enables developers to use consistent markup, styles, and behavior in prototype and production work.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Install`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Assuming we’re starting with a new @angular/cli project:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-sh\"\n      }\n    }, `\\$ npx @angular/cli new my-project --style=scss\n\\$ cd my-project\n\\$ npm i --save carbon-components-angular carbon-components\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Then we need to include carbon-components in `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `src/styles.scss`), `:`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-scss\"\n      }\n    }, `@import '~carbon-components/scss/globals/scss/styles.scss';\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `That’s it! Now start the server and start building.`), React.createElement(MDXTag, {\n      name: \"pre\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"code\",\n      components: components,\n      parentName: \"pre\",\n      props: {\n        \"className\": \"language-sh\"\n      }\n    }, `\\$ npm start\n`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Note: This isn’t the only way to bootstrap a`), ` `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `carbon-components-angular`), ` `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `application, but the combination of`), ` `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `@angular/cli`), ` `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `and the`), ` `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"p\"\n    }, `carbon-components`), ` `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `scss is our recommended setup.`)), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Using our starter app`), React.createElement(ImageComponent, {\n      cols: \"12\",\n      bg: \"none\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"56.07142857142857%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"carbon-angular-starter screenshot\",\n      title: \"\",\n      src: \"/static/810c9f186ce2bd6a4ed76b075e2f278d/24bd0/carbon-angular-starter.png\",\n      srcSet: \"/static/810c9f186ce2bd6a4ed76b075e2f278d/7cb4c/carbon-angular-starter.png 280w,\\n/static/810c9f186ce2bd6a4ed76b075e2f278d/7ff44/carbon-angular-starter.png 560w,\\n/static/810c9f186ce2bd6a4ed76b075e2f278d/24bd0/carbon-angular-starter.png 1120w,\\n/static/810c9f186ce2bd6a4ed76b075e2f278d/7e58d/carbon-angular-starter.png 1680w,\\n/static/810c9f186ce2bd6a4ed76b075e2f278d/8ef2b/carbon-angular-starter.png 2240w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `We recommend using the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://github.com/carbon-design-system/carbon-angular-starter\"\n      }\n    }, `carbon-angular-starter`), ` for bootstrapping applications with Carbon components. Within five minutes your app will be running with the following already configured:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Angular-cli`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Build process`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Code styles and editor configs`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Folder structure`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Lazy loading`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Routing`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Service workers`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Test framework`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Check out the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://github.com/carbon-design-system/carbon-angular-starter\"\n      }\n    }, `readme`), ` for installation instructions.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Development`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Please refer to the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://github.com/IBM/carbon-components-angular/blob/master/README.md#contributing\"\n      }\n    }, `contributing guidelines`), ` before starting any work.`));\n  }\n\n}"},"fields":{"slug":"/getting-started/developers/angular","currentPage":"angular"},"frontmatter":{"title":"Developers","label":null,"tabs":["Vanilla","React","Angular","Vue","Other frameworks"],"internal":null}}},"pageContext":{"slug":"/getting-started/developers/angular","currentPage":"angular"}}