{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(AnchorLinks, null, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#general-guidance\"\n      }\n    }, `General guidance`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#related-components\"\n      }\n    }, `Related components`), ` `), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#content\"\n      }\n    }, `Content`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#tables\"\n      }\n    }, `Tables`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `General guidance`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Checkboxes`), ` are used for a list of options where the user may select multiple options, including all or none.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Checkbox states`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The checkbox control allows for three states: `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `selected`), `, `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `unselected`), `, and `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `indeterminate`), `. The indeterminate state comes into play when the checkbox contains a sublist of selections, some of which are selected, and some unselected.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Click target`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Users should be able to select the checkbox by clicking on the box directly or by clicking on its label.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Default selection`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The default view of a set of checkboxes is having no option selected.`), React.createElement(ImageComponent, {\n      cols: \"8\",\n      caption: \"By default, checkboxes are unchecked.\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"41.30434782608695%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"The default state for checkboxes is unchecked.\",\n      title: \"\",\n      src: \"/static/06579fa37df5ce59fdebc002dc3f0932/24bd0/checkbox-usage-1.png\",\n      srcSet: \"/static/06579fa37df5ce59fdebc002dc3f0932/7cb4c/checkbox-usage-1.png 280w,\\n/static/06579fa37df5ce59fdebc002dc3f0932/7ff44/checkbox-usage-1.png 560w,\\n/static/06579fa37df5ce59fdebc002dc3f0932/24bd0/checkbox-usage-1.png 1120w,\\n/static/06579fa37df5ce59fdebc002dc3f0932/b4af2/checkbox-usage-1.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Related components`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Checkbox vs. radio button`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Whereas radio buttons represent a group of `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `mutually exclusive`), ` choices, users can select one or more checkboxes from a group. In use cases where only one selection of a group is allowed, use the radio button component instead of the checkbox.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Checkbox vs. toggle switch`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Generally, toggle switches are preferred when the resulting action will be instantaneously applied, without the need for further confirmation. Checkboxes generally represent one input in a larger flow which requires a final confirmation step.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `References`), React.createElement(\"br\", null), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/components/toggle\"\n      }\n    }, `Toggle`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/components/radio-button\"\n      }\n    }, `Radio button`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"/components/form\"\n      }\n    }, `Form`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"li\"\n    }, `Data table (coming soon)`))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Content`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Headings`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `If necessary, a heading can accompany a set of checkboxes to provide further context or clarity. Use sentence case for checkbox headings. In the example below, “IBM designers” would be the heading for the set of checkboxes.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Labels`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Always use clear and concise labels for checkboxes. Be explicit about the results that will follow if the checkbox is selected. Labels appear to the right of checkboxes.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Tables`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `See the `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/components/data-table/usage\"\n      }\n    }, `data table`), ` section for guidance on how to use checkboxes within a table.`));\n  }\n\n}"},"fields":{"slug":"/components/checkbox/usage","currentPage":"usage"},"frontmatter":{"title":"Checkbox","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/checkbox/usage","currentPage":"usage"}}