{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(AnchorLinks, null, React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#general-guidance\"\n      }\n    }, `General guidance`)), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#format\"\n      }\n    }, `Format`), ` `), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#variations\"\n      }\n    }, `Variations`), ` `), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"li\",\n      props: {\n        \"href\": \"#dismissal\"\n      }\n    }, `Dismissal`)))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `General guidance`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `Modals`), ` communicate information via a secondary window and allow the user to maintain the context of a particular task. Use modals sparingly because they interrupt user workflow.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Format`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Header`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Include a heading within the modal that mirrors the action or button that was clicked by the user. Headers include a close button “x” in the upper right-hand corner of the modal.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Body`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The body content within a modal should be as minimal as possible. Components that may be used in modals include: form fields, text area, select, and radio buttons.`), React.createElement(MDXTag, {\n      name: \"h4\",\n      components: components\n    }, `Footer`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `The footer area of a modal typically contains a set of buttons. Refer to `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"/components/button\"\n      }\n    }, `button`), ` guidelines for usage.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Variations`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Transactional modal`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Transactional modals are used to validate user decisions or to gain secondary confirmation from the user. Typically, the modal requests either a ‘yes’ or ‘no’ response.`), React.createElement(ImageComponent, {\n      cols: \"8\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"51.902173913043484%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"transactional modal\",\n      title: \"\",\n      src: \"/static/214ec26dfb9018366c29fa5accdbc21a/24bd0/modal-usage-1.png\",\n      srcSet: \"/static/214ec26dfb9018366c29fa5accdbc21a/7cb4c/modal-usage-1.png 280w,\\n/static/214ec26dfb9018366c29fa5accdbc21a/7ff44/modal-usage-1.png 560w,\\n/static/214ec26dfb9018366c29fa5accdbc21a/24bd0/modal-usage-1.png 1120w,\\n/static/214ec26dfb9018366c29fa5accdbc21a/b4af2/modal-usage-1.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Passive modal`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This modal is used as a style of notifications. We highly discourage the use of this, due to its disruptive nature. Passive modal notifications should only appear if there is an action the user needs to address immediately. Passive modal notifications are persistent on-screen. That is, they do not automatically go away after appearing. Users must either engage with or dismiss the notification.`), React.createElement(ImageComponent, {\n      cols: \"8\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"45.92391304347826%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"Passive modal\",\n      title: \"\",\n      src: \"/static/6a4abc3c2ad68b9562cb5dd64119c155/24bd0/modal-usage-3.png\",\n      srcSet: \"/static/6a4abc3c2ad68b9562cb5dd64119c155/7cb4c/modal-usage-3.png 280w,\\n/static/6a4abc3c2ad68b9562cb5dd64119c155/7ff44/modal-usage-3.png 560w,\\n/static/6a4abc3c2ad68b9562cb5dd64119c155/24bd0/modal-usage-3.png 1120w,\\n/static/6a4abc3c2ad68b9562cb5dd64119c155/b4af2/modal-usage-3.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components\n    }, `Input modal`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Modals used in this case include input areas that the user may interact with. These may include but are not limited to forms, dropdowns, selectors, and links.`), React.createElement(ImageComponent, {\n      cols: \"8\"\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-wrapper\",\n      style: {\n        \"position\": \"relative\",\n        \"display\": \"block\",\n        \"maxWidth\": \"1120px\",\n        \"marginLeft\": \"auto\",\n        \"marginRight\": \"auto\"\n      }\n    }, React.createElement(\"span\", {\n      className: \"gatsby-resp-image-background-image\",\n      style: {\n        \"paddingBottom\": \"56.1141304347826%\",\n        \"position\": \"relative\",\n        \"bottom\": \"0px\",\n        \"left\": \"0px\",\n        \"backgroundSize\": \"cover\",\n        \"display\": \"block\"\n      }\n    }), React.createElement(\"img\", {\n      className: \"gatsby-resp-image-image\",\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"margin\": \"0px\",\n        \"verticalAlign\": \"middle\",\n        \"position\": \"absolute\",\n        \"top\": \"0px\",\n        \"left\": \"0px\",\n        \"boxShadow\": \"inset 0px 0px 0px 400px transparent\"\n      },\n      alt: \"input modal\",\n      title: \"\",\n      src: \"/static/d74a33c81f5eb02c9d7e611f9d363bf3/24bd0/modal-usage-2.png\",\n      srcSet: \"/static/d74a33c81f5eb02c9d7e611f9d363bf3/7cb4c/modal-usage-2.png 280w,\\n/static/d74a33c81f5eb02c9d7e611f9d363bf3/7ff44/modal-usage-2.png 560w,\\n/static/d74a33c81f5eb02c9d7e611f9d363bf3/24bd0/modal-usage-2.png 1120w,\\n/static/d74a33c81f5eb02c9d7e611f9d363bf3/b4af2/modal-usage-2.png 1472w\",\n      sizes: \"(max-width: 1120px) 100vw, 1120px\"\n    }))), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Dismissal`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Modals may be dismissed in 3 ways:`), React.createElement(MDXTag, {\n      name: \"ul\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Using the “x” in the upper right-hand corner of the modal`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Pressing the `, React.createElement(MDXTag, {\n      name: \"inlineCode\",\n      components: components,\n      parentName: \"li\"\n    }, `ESC`), ` key`), React.createElement(MDXTag, {\n      name: \"li\",\n      components: components,\n      parentName: \"ul\"\n    }, `Clicking / touching outside of the modal area`)));\n  }\n\n}"},"fields":{"slug":"/components/modal/usage","currentPage":"usage"},"frontmatter":{"title":"Modal","label":null,"tabs":["Code","Usage","Style"],"internal":null}}},"pageContext":{"slug":"/components/modal/usage","currentPage":"usage"}}